@mixin animate-once($name) {
  animation-name: $name;
  animation-duration: 0.5s;
  animation-iteration-count: 1;
}

@mixin centered-square($size) {
  position: absolute;
  width: $size;
  height: $size;
  margin-left: (100% - $size) / 2;
  margin-top: (100% - $size) / 2;
}

@mixin position-fill() {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

applause-button {
  position: relative;
  cursor:pointer;

  .style-root {
    @include position-fill();

    &:after {
      @include position-fill();
      content: " ";
      display: block;
      border-radius: 50%;
      border: 1px solid;
    }
    &:hover:after:not(.clap-limit-exceeded) {
      border-color: inherit;
    }
  }

  &.loading {
    opacity: 0.5;
  }

  .shockwave {
    @include position-fill();
    border-radius: 50%;
  }

  svg {
    @include centered-square(60%);
    @include position-fill();
    opacity: 1;
    stroke: none;
    // annoyingly bootstrap has a higher precedence rule that sets overflow to hidden
    // hence the bang-important
    overflow: visible !important;

    g.flat {
      visibility: hidden;
    }
    g.outline {
      visibility: visible;
    }
  }

  &.clapped {
    svg {
      g.flat {
        visibility: visible;
      }
      g.outline {
        visibility: hidden;
      }
    }
  }

  .count-container {
    position: absolute;
    top: -40%;
    width: 100%;
    color: gray;
    user-select: none;

    .count {
      text-align: center;
    }
  }

  g.sparkle {
    circle {
      opacity: 0;
      stroke-width: 0;
    }

    $elements: 5;
    $degrees: 360deg / $elements;
    @for $i from 0 to $elements {
      g:nth-child(#{$i + 1}) {
        transform: rotate($degrees * $i) translateX(10px);
      }
    }
  }

  &:hover:not(.clapped) {
    .shockwave {
      animation-name: shockwave;
      animation-duration: 1s;
      animation-iteration-count: infinite;
      animation-timing-function: ease-in;
    }
  }

  // CSS that is toggled to fire one-time animations
  &.clap {
    .sparkle circle {
      @include animate-once(explode);
    }

    @include animate-once(pulse);

    .count {
      @include animate-once(hideThenShow);
    }
  }
}

@keyframes explode {
  0% {
    transform: translateX(10px);
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translateX(25px);
  }
}

@keyframes shockwave {
  0% {
    transform: scale(1);
    box-shadow: 0 0 2px;
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0;
    box-shadow: 0 0 50px, inset 0 0 10px;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes hideThenShow {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  20% {
    opacity: 0;
    transform: translateY(-10px);
  }
  50% {
    transform: translateY(10px);
  }
  80% {
    transform: translateY(10px);
    opacity: 0;
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}


/*************************************************
*  Subscribing
**************************************************/
.subscribe-box {
margin-top: 0.7rem; }

ul.subscribe {
display: flex;
align-items: center;
justify-content: center;
flex-direction: row;
flex-wrap: wrap;
list-style: none;
margin: 0;
padding: 0; }

ul.subscribe li {
display: inline-flex;
margin-right: 8px; }

ul.subscribe li:last-of-type {
margin-right: 0; }

ul.subscribe li i {
display: block;
width: 38px;
height: 38px;
line-height: 38px;
font-size: 28px;
text-align: center;
transition: all 150ms ease-in-out; }

ul.subscribe li a {
text-decoration: none !important;
color: rgba(0, 0, 0, 0.84); }

.dark ul.subscribe li a {
color: rgba(255, 255, 255, 0.84); }

ul.subscribe li:hover i {
transform: scale(1.2); }
