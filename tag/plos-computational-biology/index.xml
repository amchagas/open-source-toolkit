<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PLOS Computational Biology | Open Source Toolkit</title><link>https://amchagas.github.io/open-source-toolkit/tag/plos-computational-biology/</link><atom:link href="https://amchagas.github.io/open-source-toolkit/tag/plos-computational-biology/index.xml" rel="self" type="application/rss+xml"/><description>PLOS Computational Biology</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>CC BY SA 4.0</copyright><lastBuildDate>Tue, 18 Aug 2020 00:00:00 +0000</lastBuildDate><image><url>https://amchagas.github.io/open-source-toolkit/media/openneuroscience_logo_dark.svg</url><title>PLOS Computational Biology</title><link>https://amchagas.github.io/open-source-toolkit/tag/plos-computational-biology/</link></image><item><title>AlbaTraDIS: Comparative analysis of large datasets from parallel transposon mutagenesis experiments</title><link>https://amchagas.github.io/open-source-toolkit/post/albatradis_comparative_analysis_of_large_datasets_from_parallel_transposon_mutagenesis_experiments_plos_computational_biology/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/albatradis_comparative_analysis_of_large_datasets_from_parallel_transposon_mutagenesis_experiments_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-08-18&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: In this software paper, Page et al develop ‘AlbaTraDIS’; a software application for rapid large-scale comparative analysis of TraDIS experiments that predicts the impact of transposon insertions on nearby genes. AlbaTraDIS can identify genes which are up or down regulated, or inactivated, between multiple conditions, producing a filtered list of genes for further experimental validation as well as several accompanying data visualisations. The authors demonstrate the utility of their new approach by applying it to identify genes used by Escherichia coli to survive in a wide range of different concentrations of the biocide Triclosan.&lt;/p>
&lt;p>authors: Andrew J. Page, Muhammad Yasir, A. Keith Turner, Thanh Le Viet, George M. Savva, Mark A. Webber, Ian G. Charles, Sarah Bastkowski&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007980&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>bigPint: A Bioconductor visualization package that makes big data pint-sized</title><link>https://amchagas.github.io/open-source-toolkit/post/bigpint_a_bioconductor_visualization_package_that_makes_big_data_pintsized_plos_computational_biology/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/bigpint_a_bioconductor_visualization_package_that_makes_big_data_pintsized_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-08-18&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: bigPint is a software package for interactive and static data visualisation in R. It scales comfortably to large datasets, sporting graphs that include scatterplots, violin plots, and litre plots. It’s installable via &amp;ldquo;&lt;a href="https://bioconductor.org/packages/release/bioc/html/bigPint.html%22%3EBioconductor">https://bioconductor.org/packages/release/bioc/html/bigPint.html&amp;quot;&amp;gt;Bioconductor&lt;/a>&amp;lt;, and as an open source project it also provides an easy-to-use &amp;ldquo;&lt;a href="https://lindsayrutter.github.io/bigPint/%22%3Elanding">https://lindsayrutter.github.io/bigPint/&amp;quot;&amp;gt;landing&lt;/a>&amp;lt; page that summarises all the links a new user or developer might wish to find, from “getting started”, to source code url, package version, maintenance status, example use-case code, supported R version, author contact details and bug reporting.&lt;/p>
&lt;p>authors: Lindsay Rutter, Dianne Cook&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007912&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>OSS-DBS: Open-source simulation platform for deep brain stimulation with a comprehensive automated modeling</title><link>https://amchagas.github.io/open-source-toolkit/post/ossdbs_opensource_simulation_platform_for_deep_brain_stimulation_with_a_comprehensive_automated_modeling_plos_computational_biology/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/ossdbs_opensource_simulation_platform_for_deep_brain_stimulation_with_a_comprehensive_automated_modeling_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-08-18&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: In this study, Butenko et al propose a new open-source simulation platform that comprises computer-aided design and computer-aided engineering tools for highly automated evaluation of electric field distribution and neural activation during Deep Brain Stimulation (DBS). They show how a Volume Conductor Model (VCM) is constructed and examined using Python-controlled algorithms for generation, discretization and adaptive mesh refinement of the computational domain, as well as for incorporation of heterogeneous and anisotropic properties of the tissue and allocation of neuron models.&lt;/p>
&lt;p>authors: Konstantin Butenko, Christian Bahls, Max Schröder, Rüdiger Köhling, Ursula van Rienen&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1008023&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>The genome polishing tool POLCA makes fast and accurate corrections in genome assemblies</title><link>https://amchagas.github.io/open-source-toolkit/post/the_genome_polishing_tool_polca_makes_fast_and_accurate_corrections_in_genome_assemblies_plos_computational_biology/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/the_genome_polishing_tool_polca_makes_fast_and_accurate_corrections_in_genome_assemblies_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-08-18&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: In this report, Zimin and Salzberg present the assembly polishing tool POLCA (POLishing by Calling Alternatives) and compare its performance with two other popular polishing programs, Pilon and Racon. They show that on simulated data POLCA is more accurate than Pilon, and comparable in accuracy to Racon. On real data, all three programs show similar performance, but POLCA is consistently much faster than either of the other polishing programs.&lt;/p>
&lt;p>authors: Aleksey V. Zimin, Steven L. Salzberg&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007981&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>ProteinVR: Web-based molecular visualization in virtual reality</title><link>https://amchagas.github.io/open-source-toolkit/post/proteinvr_webbased_molecular_visualization_in_virtual_reality_plos_computational_biology/</link><pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/proteinvr_webbased_molecular_visualization_in_virtual_reality_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-05-12&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Channel Editor Summary: Have you ever wondered what proteins look like? In fact, accurately conceptualizing 3D protein structures is vital to both scientific research and education. ProteinVR is a free web-based application that works on various virtual reality (VR) setups and operating systems. ProteinVR displays molecular structures within 3D environments that give useful biological context and allow users to situate themselves in 3D space. ProteinVR is a promising tool, and its source code is hosted on GitLab with some exceptional instruction on installing ProteinVR on your own computer.&lt;/p>
&lt;p>authors: Kevin C. Cassidy, Jan Šefčík, Yogindra Raghav, Alexander Chang, Jacob D. Durrant&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007747&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Scedar: A scalable Python package for single-cell RNA-seq exploratory data analysis</title><link>https://amchagas.github.io/open-source-toolkit/post/scedar_a_scalable_python_package_for_singlecell_rnaseq_exploratory_data_analysis_plos_computational_biology/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/scedar_a_scalable_python_package_for_singlecell_rnaseq_exploratory_data_analysis_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-04-27&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: None&lt;/p>
&lt;p>authors: Yuanchao Zhang, Man S. Kim, Erin R. Reichenberger, Ben Stear, Deanne M. Taylor&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007794&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>3D mesh processing using GAMer 2 to enable reaction-diffusion simulations in realistic cellular geometries</title><link>https://amchagas.github.io/open-source-toolkit/post/3d_mesh_processing_using_gamer_2_to_enable_reactiondiffusion_simulations_in_realistic_cellular_geometries_plos_computational_biology/</link><pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/3d_mesh_processing_using_gamer_2_to_enable_reactiondiffusion_simulations_in_realistic_cellular_geometries_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-04-06&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: None&lt;/p>
&lt;p>authors: Christopher T. Lee, Justin G. Laughlin, Nils Angliviel de La Beaumelle, Rommie E. Amaro, J. Andrew McCammon, Ravi Ramamoorthi, Michael Holst, Padmini Rangamani&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007756&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Ten simple rules for providing effective bioinformatics research support</title><link>https://amchagas.github.io/open-source-toolkit/post/ten_simple_rules_for_providing_effective_bioinformatics_research_support_plos_computational_biology/</link><pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/ten_simple_rules_for_providing_effective_bioinformatics_research_support_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-03-26&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: None&lt;/p>
&lt;p>authors: Judit Kumuthini, Michael Chimenti, Sven Nahnsen, Alexander Peltzer, Rebone Meraba, Ross McFadyen, Gordon Wells, Deanne Taylor, Mark Maienschein-Cline, Jian-Liang Li, Jyothi Thimmapuram, Radha Murthy-Karuturi, Lyndon Zass&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007531&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>XPRESSyourself: Enhancing, standardizing, and automating ribosome profiling computational analyses yields improved insight into data</title><link>https://amchagas.github.io/open-source-toolkit/post/xpressyourself_enhancing_standardizing_and_automating_ribosome_profiling_computational_analyses_yields_improved_insight_into_data_plos_computational_biology/</link><pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/xpressyourself_enhancing_standardizing_and_automating_ribosome_profiling_computational_analyses_yields_improved_insight_into_data_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-03-03&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Ribosome profiling, an application of nucleic acid sequencing for monitoring ribosome activity, has revolutionized our understanding of protein translation dynamics. This technique has been available for a decade, yet the current state and standardization of publicly available computational tools for these data is bleak. Here, Berg et al introduce XPRESSyourself, an analytical toolkit that eliminates barriers and bottlenecks associated with this specialized data type by filling gaps in the computational toolset for both experts and non-experts of ribosome profiling. XPRESSyourself software is perpetually open-source under the GPL-3.0 license and is hosted on &amp;ldquo;&lt;a href="https://github.com/XPRESSyourself%22%3EGitHub">https://github.com/XPRESSyourself&amp;quot;&amp;gt;GitHub&lt;/a>&amp;lt;, where users can access additional documentation and report software issues.&lt;/p>
&lt;p>authors: Jordan A. Berg, Jonathan R. Belyeu, Jeffrey T. Morgan, Yeyun Ouyang, Alex J. Bott, Aaron R. Quinlan, Jason Gertz, Jared Rutter&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007625&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>RAINBOW: Haplotype-based genome-wide association study using a novel SNP-set method</title><link>https://amchagas.github.io/open-source-toolkit/post/rainbow_haplotypebased_genomewide_association_study_using_a_novel_snpset_method_plos_computational_biology/</link><pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/rainbow_haplotypebased_genomewide_association_study_using_a_novel_snpset_method_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-02-14&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: None&lt;/p>
&lt;p>authors: Kosuke Hamazaki, Hiroyoshi Iwata&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007663&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Orbit Image Analysis: An open-source whole slide image analysis tool</title><link>https://amchagas.github.io/open-source-toolkit/post/orbit_image_analysis_an_opensource_whole_slide_image_analysis_tool_plos_computational_biology/</link><pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/orbit_image_analysis_an_opensource_whole_slide_image_analysis_tool_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-02-05&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: None&lt;/p>
&lt;p>authors: Manuel Stritt, Anna K. Stalder, Enrico Vezzali&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007313&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>NUFEB: A massively parallel simulator for individual-based modelling of microbial communities</title><link>https://amchagas.github.io/open-source-toolkit/post/nufeb_a_massively_parallel_simulator_for_individualbased_modelling_of_microbial_communities_plos_computational_biology/</link><pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/nufeb_a_massively_parallel_simulator_for_individualbased_modelling_of_microbial_communities_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-01-15&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: None&lt;/p>
&lt;p>authors: Bowen Li, Denis Taniguchi, Jayathilake Pahala Gedara, Valentina Gogulancea, Rebeca Gonzalez-Cabaleiro, Jinju Chen, Andrew Stephen McGough, Irina Dana Ofiteru, Thomas P. Curtis, Paolo Zuliani&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007125&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Ten quick tips for delivering programming lessons</title><link>https://amchagas.github.io/open-source-toolkit/post/ten_quick_tips_for_delivering_programming_lessons_plos_computational_biology/</link><pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/ten_quick_tips_for_delivering_programming_lessons_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-01-15&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Teaching well is a craft like any other, and success often comes from an accumulation of small improvements rather than from any single large change. This paper describes 10 practices you can use when teaching programming (and other subjects). All are easy to adopt and have proven their value in institutional classrooms, intensive workshops, and other settings.&lt;/p>
&lt;p>authors: Greg Wilson&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007433&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Telescope: Characterization of the retrotranscriptome by accurate estimation of transposable element expression</title><link>https://amchagas.github.io/open-source-toolkit/post/telescope_characterization_of_the_retrotranscriptome_by_accurate_estimation_of_transposable_element_expression_plos_computational_biology/</link><pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/telescope_characterization_of_the_retrotranscriptome_by_accurate_estimation_of_transposable_element_expression_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2019-10-17&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Almost half of the human genome is composed of transposable elements (TEs), but their contribution to the transcriptome, their cell-type specific expression patterns, and their role in disease remains poorly understood. Recent studies have found many elements to be actively expressed and involved in key cellular processes. The authors also showed that Telescope performed better than other methods currently used to determine TE expression. The use of this computational tool to examine new and existing RNA-seq data sets may lead to new understanding of the roles of TEs in health and disease.&lt;/p>
&lt;p>authors: Matthew L. Bendall, Miguel de Mulder, Luis Pedro Iñiguez, Aarón Lecanda-Sánchez, Marcos Pérez-Losada, Mario A. Ostrowski, R. Brad Jones, Lubbertus C. F. Mulder, Gustavo Reyes-Terán, Keith A. Crandall, Christopher E. Ormsby, Douglas F. Nixon&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1006453&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Ten simple rules for helping newcomers become contributors to open projects</title><link>https://amchagas.github.io/open-source-toolkit/post/ten_simple_rules_for_helping_newcomers_become_contributors_to_open_projects_plos_computational_biology/</link><pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/ten_simple_rules_for_helping_newcomers_become_contributors_to_open_projects_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2019-09-26&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Open source projects are nothing but a collaborative effort of community members. The constant involvement of maintainers, contributors, and users make open source software sustainable and keeps the community as a whole going. Attracting new members, retaining them, and helping them be productive is not always as easy task. “Ten simple rules for helping newcomers become contributors to open projects”, as stated in the title, discusses ten simple rules projects should follow to help new contributors into their communities.&lt;/p>
&lt;p>If you are a new contributor interested in winning a t-shirt by making four pull requests and/or part of a project wanting to attract new members we recommend checking out &amp;ldquo;&lt;a href="https://hacktoberfest.digitalocean.com/%22%3EHacktoberfest">https://hacktoberfest.digitalocean.com/&amp;quot;&amp;gt;Hacktoberfest&lt;/a>&amp;lt; .&lt;/p>
&lt;p>authors: Dan Sholler, Igor Steinmacher, Denae Ford, Mara Averick, Mike Hoye, Greg Wilson&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007296&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Open collaborative writing with Manubot</title><link>https://amchagas.github.io/open-source-toolkit/post/open_collaborative_writing_with_manubot_plos_computational_biology/</link><pubDate>Fri, 16 Aug 2019 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/open_collaborative_writing_with_manubot_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2019-08-16&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Traditionally, scholarly manuscripts have been written in private by a predefined team of collaborators. But now the internet enables realtime open science, where project communication occurs online in a public venue and anyone is able to contribute. Therefore, the authors created a system called Manubot for writing manuscripts based on collaborative version control. Manubot adopts the workflow from open source software development, which has enabled hundreds of contributors to simultaneously develop complex codebases such as Python and Linux, and applies it to open collaborative writing.&lt;/p>
&lt;p>authors: Daniel S. Himmelstein, Vincent Rubinetti, David R. Slochower, Dongbo Hu, Venkat S. Malladi, Casey S. Greene, Anthony Gitter&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007128&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Stytra: An open-source, integrated system for stimulation, tracking and closed-loop behavioral experiments</title><link>https://amchagas.github.io/open-source-toolkit/post/stytra_an_opensource_integrated_system_for_stimulation_tracking_and_closedloop_behavioral_experiments_plos_computational_biology/</link><pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/stytra_an_opensource_integrated_system_for_stimulation_tracking_and_closedloop_behavioral_experiments_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2019-05-23&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: This paper presents Stytra, a flexible, open-source software package, written in Python and designed to cover all the general requirements involved in larval zebrafish behavioral experiments. It provides timed stimulus presentation, interfacing with external devices and simultaneous real-time tracking of behavioral parameters such as position, orientation, tail and eye motion in both freely-swimming and head-restrained preparations.&lt;/p>
&lt;p>authors: Vilim Štih, Luigi Petrucco, Andreas M. Kist, Ruben Portugues&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1006699&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>ReaDDy 2: Fast and flexible software framework for interacting-particle reaction dynamics</title><link>https://amchagas.github.io/open-source-toolkit/post/readdy_2_fast_and_flexible_software_framework_for_interactingparticle_reaction_dynamics_plos_computational_biology/</link><pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/readdy_2_fast_and_flexible_software_framework_for_interactingparticle_reaction_dynamics_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2019-04-11&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Interacting-particle reaction dynamics (iPRD) combines the simulation of dynamical trajectories of interacting particles as in molecular dynamics (MD) simulations with reaction kinetics, in which particles appear, disappear, or change their type and interactions based on a set of reaction rules. Here the authors introduce the iPRD software ReaDDy 2, which provides a Python interface in which the simulation environment, particle interactions and reaction rules can be conveniently defined and the simulation can be run, stored and analyzed. A C++ interface is available to enable deeper and more flexible interactions with the framework.&lt;/p>
&lt;p>authors: Moritz Hoffmann, Christoph Fröhner, Frank Noé&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1006830&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Apollo: Democratizing genome annotation</title><link>https://amchagas.github.io/open-source-toolkit/post/apollo_democratizing_genome_annotation_plos_computational_biology/</link><pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/apollo_democratizing_genome_annotation_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2019-02-27&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Genome annotation is the process of identifying the location and function of a genome&amp;rsquo;s encoded features. Improving the biological accuracy of annotation is a complex and iterative process requiring researchers to review and incorporate multiple sources of information such as transcriptome alignments, predictive models based on sequence profiles, and comparisons to features found in related organisms. The authors present Apollo, an open source software package that enables researchers to efficiently inspect and refine the precise structure and role of genomic features in a graphical browser-based platform. Some of Apollo’s newer user interface features include support for real-time collaboration, allowing distributed users to simultaneously edit the same encoded features while also instantly seeing the updates made by other researchers on the same region in a manner similar to Google Docs. Its technical architecture enables Apollo to be integrated into multiple existing genomic analysis pipelines and heterogeneous laboratory workflow platforms.&lt;/p>
&lt;p>authors: Nathan A. Dunn, Deepak R. Unni, Colin Diesh, Monica Munoz-Torres, Nomi L. Harris, Eric Yao, Helena Rasche, Ian H. Holmes, Christine G. Elsik, Suzanna E. Lewis&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1006790&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>BioJava 5: A community driven open-source bioinformatics library</title><link>https://amchagas.github.io/open-source-toolkit/post/biojava_5_a_community_driven_opensource_bioinformatics_library_plos_computational_biology/</link><pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/biojava_5_a_community_driven_opensource_bioinformatics_library_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2019-02-27&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Channel Editor Summary: BioJava is an open source project which provides a Java framework for processing biological data. The project offers analytical and statistical routines, parsers for common file formats, reference implementations of popular algorithms, and allows the manipulation of sequences and 3D structures. BioJava is a very high quality project that has been maintained since 2000 and has created a large and growing community for itself. It currently has 59 contributors and over 200 starts on its Github repository.&lt;/p>
&lt;p>authors: Aleix Lafita, Spencer Bliven, Andreas Prlić, Dmytro Guzenko, Peter W. Rose, Anthony Bradley, Paolo Pavan, Douglas Myers-Turnbull, Yana Valasatava, Michael Heuer, Matt Larson, Stephen K. Burley, Jose M. Duarte&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1006791&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Context-explorer: Analysis of spatially organized protein expression in high-throughput screens</title><link>https://amchagas.github.io/open-source-toolkit/post/contextexplorer_analysis_of_spatially_organized_protein_expression_in_highthroughput_screens_plos_computational_biology/</link><pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/contextexplorer_analysis_of_spatially_organized_protein_expression_in_highthroughput_screens_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2019-01-17&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Channel Editor&amp;rsquo;s Summary: To many, open source software means “free to use”, and to others it might mean “I can see and re-use the code freely”. One way open source software can truly stand out, however, is by ensuring it’s welcoming and easy for newcomers to use and contribute to. Content-explorer is a python-based tool that provides a graphical interface to analyse data extracted from cell microscope images, and includes a high-quality readme, contribution guidance, and a code of conduct to ensure all contributors feel welcome and safe.&lt;/p>
&lt;p>authors: Joel Ostblom, Emanuel J. P. Nazareth, Mukul Tewary, Peter W. Zandstra&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1006384&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>meaRtools: An R package for the analysis of neuronal networks recorded on microelectrode arrays</title><link>https://amchagas.github.io/open-source-toolkit/post/meartools_an_r_package_for_the_analysis_of_neuronal_networks_recorded_on_microelectrode_arrays_plos_computational_biology/</link><pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/meartools_an_r_package_for_the_analysis_of_neuronal_networks_recorded_on_microelectrode_arrays_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-10-23&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: In this paper, Gelfman et al. present an open-source R package ‘meaRtools’ that provides a platform for analyzing neuronal networks recorded on Microelectrode Arrays (MEAs). meaRtools functionality covers novel solutions for spike train analysis, including algorithms to assess electrode cross-correlation using the spike train tiling coefficient (STTC), mutual information, synchronized bursts and entropy within cultured wells. Also integrated is a solution to account for bursts variability originating from mixed-cell neuronal cultures.&lt;/p>
&lt;p>authors: Sahar Gelfman, Quanli Wang, Yi-Fan Lu, Diana Hall, Christopher D. Bostick, Ryan Dhindsa, Matt Halvorsen, K. Melodi McSweeney, Ellese Cotterill, Tom Edinburgh, Michael A. Beaumont, Wayne N. Frankel, Slavé Petrovski, Andrew S. Allen, Michael J. Boland, David B. Goldstein, Stephen J. Eglen&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1006506&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Wrangling distributed computing for high-throughput environmental science: An introduction to HTCondor</title><link>https://amchagas.github.io/open-source-toolkit/post/wrangling_distributed_computing_for_highthroughput_environmental_science_an_introduction_to_htcondor_plos_computational_biology/</link><pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/wrangling_distributed_computing_for_highthroughput_environmental_science_an_introduction_to_htcondor_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-10-23&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Whilst many open source projects enter the spotlight as trend-setting new software packages, it’s nice to appreciate some of the long-lived projects as well. HTCondor has been around since the 1980s, a decade before the term “open source” was even coined. HTCondor provides high throughput computing - granting compute power to those who may not have access to high performance computing, by utilising idle cycles on distributed volunteer computers. It can be used in multiple research domains to perform otherwise overly-intensive calculations.&lt;/p>
&lt;p>authors: Richard A. Erickson, Michael N. Fienen, S. Grace McCalla, Emily L. Weiser, Melvin L. Bower, Jonathan M. Knudson, Greg Thain&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1006468&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>ggsashimi: Sashimi plot revised for browser- and annotation-independent splicing visualization</title><link>https://amchagas.github.io/open-source-toolkit/post/ggsashimi_sashimi_plot_revised_for_browser_and_annotationindependent_splicing_visualization_plos_computational_biology/</link><pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/ggsashimi_sashimi_plot_revised_for_browser_and_annotationindependent_splicing_visualization_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-08-17&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Garrido-Martín et al. present ggsashimi, a command-line tool for the visualization of splicing events across multiple samples. Given a specified genomic region, ggsashimi creates sashimi plots for individual RNA-seq experiments as well as aggregated plots for groups of experiments, a feature unique to this software.&lt;/p>
&lt;p>authors: Diego Garrido-Martín, Emilio Palumbo, Roderic Guigó, Alessandra Breschi&lt;/p>
&lt;p>link to paper: &lt;a href="http://dx.doi.org/10.1371/journal.pcbi.1006360">http://dx.doi.org/10.1371/journal.pcbi.1006360&lt;/a>&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>riboWaltz: Optimization of ribosome P-site positioning in ribosome profiling data</title><link>https://amchagas.github.io/open-source-toolkit/post/ribowaltz_optimization_of_ribosome_psite_positioning_in_ribosome_profiling_data_plos_computational_biology/</link><pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/ribowaltz_optimization_of_ribosome_psite_positioning_in_ribosome_profiling_data_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-08-13&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: None&lt;/p>
&lt;p>authors: None&lt;/p>
&lt;p>link to paper: &lt;a href="http://dx.doi.org/10.1371/journal.pcbi.1006169">http://dx.doi.org/10.1371/journal.pcbi.1006169&lt;/a>&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>OpenSim: Simulating musculoskeletal dynamics and neuromuscular control to study human and animal movement</title><link>https://amchagas.github.io/open-source-toolkit/post/opensim_simulating_musculoskeletal_dynamics_and_neuromuscular_control_to_study_human_and_animal_movement_plos_computational_biology/</link><pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/opensim_simulating_musculoskeletal_dynamics_and_neuromuscular_control_to_study_human_and_animal_movement_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-07-26&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Movement is fundamental to human and animal life, emerging through interaction of complex neural, muscular, and skeletal systems. Study of movement draws from and contributes to diverse fields, including biology, neuroscience, mechanics, and robotics. OpenSim unites methods from these fields to create fast and accurate simulations of movement. OpenSim is an extensible and user-friendly software package built on decades of knowledge about computational modeling and simulation of biomechanical systems.&lt;/p>
&lt;p>authors: Ajay Seth, Jennifer L. Hicks, Thomas K. Uchida, Ayman Habib, Christopher L. Dembia, James J. Dunne, Carmichael F. Ong, Matthew S. DeMers, Apoorva Rajagopal, Matthew Millard, Samuel R. Hamner, Edith M. Arnold, Jennifer R. Yong, Shrinidhi K. Lakshmikanth, Michael A. Sherman, Joy P. Ku, Scott L. Delp&lt;/p>
&lt;p>link to paper: &lt;a href="http://dx.doi.org/10.1371/journal.pcbi.1006223">http://dx.doi.org/10.1371/journal.pcbi.1006223&lt;/a>&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>PyPhi: A toolbox for integrated information theory</title><link>https://amchagas.github.io/open-source-toolkit/post/pyphi_a_toolbox_for_integrated_information_theory_plos_computational_biology/</link><pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/pyphi_a_toolbox_for_integrated_information_theory_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-07-26&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Integrated information theory provides a mathematical framework to fully characterize the cause-effect structure of a physical system. Here, the authors introduce PyPhi, a Python software package that implements this framework for causal analysis and unfolds the full cause-effect structure of discrete dynamical systems of binary elements.&lt;/p>
&lt;p>authors: William G. P. Mayner, William Marshall, Larissa Albantakis, Graham Findlay, Robert Marchman, Giulio Tononi&lt;/p>
&lt;p>link to paper: &lt;a href="https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1006343">https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1006343&lt;/a>&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Porcupine: A visual pipeline tool for neuroimaging analysis</title><link>https://amchagas.github.io/open-source-toolkit/post/porcupine_a_visual_pipeline_tool_for_neuroimaging_analysis_plos_computational_biology/</link><pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/porcupine_a_visual_pipeline_tool_for_neuroimaging_analysis_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-05-10&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: The field of neuroimaging is rapidly adopting a more reproducible approach to data acquisition and analysis. Data structures and formats are being standardised and data analyses are getting more automated. However, as data analysis becomes more complicated, researchers often have to write longer analysis scripts, spanning different tools across multiple programming languages. This makes it more difficult to share or recreate code, reducing the reproducibility of the analysis. We present a tool, Porcupine, that constructs one’s analysis visually and automatically produces analysis code. The graphical representation improves understanding of the performed analysis, while retaining the flexibility of modifying the produced code manually to custom needs.&lt;/p>
&lt;p>authors: Tim van Mourik, Lukas Snoek, Tomas Knapen, David G. Norris&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1006064&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Bayesian reconstruction of transmission within outbreaks using genomic variants</title><link>https://amchagas.github.io/open-source-toolkit/post/bayesian_reconstruction_of_transmission_within_outbreaks_using_genomic_variants_plos_computational_biology/</link><pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/bayesian_reconstruction_of_transmission_within_outbreaks_using_genomic_variants_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-04-18&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Pathogen genome sequencing can reveal details of transmission histories and is a powerful tool in the fight against infectious disease. In particular, within-host pathogen genomic variants identified through heterozygous nucleotide base calls are a potential source of information to identify linked cases and infer direction and time of transmission. However, using such data effectively to model disease transmission presents a number of challenges, including differentiating genuine variants from those observed due to sequencing error, as well as the specification of a realistic model for within-host pathogen population dynamics. Nicola De Maio et al here propose a new Bayesian approach to transmission inference, BadTrIP (BAyesian epiDemiological TRansmission Inference from Polymorphisms), that explicitly models evolution of pathogen populations in an outbreak, transmission (including transmission bottlenecks), and sequencing error.&lt;/p>
&lt;p>authors: Nicola De Maio, Colin J. Worby, Daniel J. Wilson, Nicole Stoesser&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1006117&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Biobeam—Multiplexed wave-optical simulations of light-sheet microscopy</title><link>https://amchagas.github.io/open-source-toolkit/post/biobeammultiplexed_waveoptical_simulations_of_lightsheet_microscopy_plos_computational_biology/</link><pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/biobeammultiplexed_waveoptical_simulations_of_lightsheet_microscopy_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-04-13&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Modern microscopes allow us to acquire high quality external images of biological specimens, however, these can only be obtained at the very surface of the specimen. Delving deeper into the biological tissues results in a decreased quality image due to light scattering by the tissues’ cells. Weigert et al present an open source software package called biobeam to address the issue by simulating how microscopes record images deep inside scattering biological samples. The development of biobeam follows several best practice software approaches, such as modularization and automated testing. These do not only reflect on the correctness of their results but also on the flexibility to contribute and implement further features in biobeam.&lt;/p>
&lt;p>authors: Martin Weigert, Kaushikaram Subramanian, Sebastian T. Bundschuh, Eugene W. Myers, Moritz Kreysing&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1006079&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>PhysiCell: An open source physics-based cell simulator for 3-D multicellular systems</title><link>https://amchagas.github.io/open-source-toolkit/post/physicell_an_open_source_physicsbased_cell_simulator_for_3d_multicellular_systems_plos_computational_biology/</link><pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/physicell_an_open_source_physicsbased_cell_simulator_for_3d_multicellular_systems_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-04-11&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Many multicellular systems problems can only be understood by studying how cells move, grow, divide, interact, and die. Tissue-scale dynamics emerge from systems of many interacting cells as they respond to and influence their microenvironment. The ideal “virtual laboratory” for such multicellular systems simulates both the biochemical microenvironment (the “stage”) and many mechanically and biochemically interacting cells (the “players” upon the stage). PhysiCell—physics-based multicellular simulator—is an open source agent-based simulator that provides both the stage and the players for studying many interacting cells in dynamic tissue microenvironments. It builds upon a multi-substrate biotransport solver to link cell phenotype to multiple diffusing substrates and signaling factors.&lt;/p>
&lt;p>authors: Ahmadreza Ghaffarizadeh, Randy Heiland, Samuel H. Friedman, Shannon M. Mumenthaler, Paul Macklin&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1005991&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Fluctuating Finite Element Analysis (FFEA): A continuum mechanics software tool for mesoscale simulation of biomolecules</title><link>https://amchagas.github.io/open-source-toolkit/post/fluctuating_finite_element_analysis_ffea_a_continuum_mechanics_software_tool_for_mesoscale_simulation_of_biomolecules_plos_computational_biology/</link><pubDate>Fri, 23 Mar 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/fluctuating_finite_element_analysis_ffea_a_continuum_mechanics_software_tool_for_mesoscale_simulation_of_biomolecules_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-03-23&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: None&lt;/p>
&lt;p>authors: Albert Solernou, Benjamin S. Hanson, Robin A. Richardson, Robert Welch, Daniel J. Read, Oliver G. Harlen, Sarah A. Harris&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1005897&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Bat detective—Deep learning tools for bat acoustic signal detection</title><link>https://amchagas.github.io/open-source-toolkit/post/bat_detectivedeep_learning_tools_for_bat_acoustic_signal_detection_plos_computational_biology/</link><pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/bat_detectivedeep_learning_tools_for_bat_acoustic_signal_detection_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-03-08&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: None&lt;/p>
&lt;p>authors: Oisin Mac Aodha, Rory Gibb, Kate E. Barlow, Ella Browning, Michael Firman, Robin Freeman, Briana Harder, Libby Kinsey, Gary R. Mead, Stuart E. Newson, Ivan Pandourski, Stuart Parsons, Jon Russ, Abigel Szodoray-Paradi, Farkas Szodoray-Paradi, Elena Tilova, Mark Girolami, Gabriel Brostow, Kate E. Jones&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1005995&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Ten simple rules for collaborative lesson development</title><link>https://amchagas.github.io/open-source-toolkit/post/ten_simple_rules_for_collaborative_lesson_development_plos_computational_biology/</link><pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/ten_simple_rules_for_collaborative_lesson_development_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2018-03-01&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Lessons take significant effort to build and even more to maintain. Most academics do this work on their own, but leveraging a community approach can make educational resource development more sustainable, robust, and responsive. Treating lessons as a community resource to be updated, adapted, and improved incrementally can free up valuable time while increasing quality.&lt;/p>
&lt;p>authors: Gabriel A. Devenyi, Rémi Emonet, Rayna M. Harris, Kate L. Hertweck, Damien Irving, Ian Milligan, Greg Wilson&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1005963&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Mindboggling morphometry of human brains</title><link>https://amchagas.github.io/open-source-toolkit/post/mindboggling_morphometry_of_human_brains_plos_computational_biology/</link><pubDate>Thu, 23 Feb 2017 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/mindboggling_morphometry_of_human_brains_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2017-02-23&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: None&lt;/p>
&lt;p>authors: Arno Klein, Satrajit S. Ghosh, Forrest S. Bao, Joachim Giard, Yrjö Häme, Eliezer Stavsky, Noah Lee, Brian Rossa, Martin Reuter, Elias Chaibub Neto, Anisha Keshavan&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1005350&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Metacoder: An R package for visualization and manipulation of community taxonomic diversity data</title><link>https://amchagas.github.io/open-source-toolkit/post/metacoder_an_r_package_for_visualization_and_manipulation_of_community_taxonomic_diversity_data_plos_computational_biology/</link><pubDate>Tue, 21 Feb 2017 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/metacoder_an_r_package_for_visualization_and_manipulation_of_community_taxonomic_diversity_data_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2017-02-21&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: Community-level data, the type generated by an increasing number of metabarcoding studies, is often graphed as stacked bar charts or pie graphs that use color to represent taxa. These graph types do not convey the hierarchical structure of taxonomic classifications and are limited by the use of color for categories. As an alternative, the authors developed metacoder, an R package for easily parsing, manipulating, and graphing publication-ready plots of hierarchical data.&lt;/p>
&lt;p>authors: Zachary S. L. Foster, Thomas J. Sharpton, Niklaus J. Grünwald&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1005404&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>ASPASIA: A toolkit for evaluating the effects of biological interventions on SBML model behaviour</title><link>https://amchagas.github.io/open-source-toolkit/post/aspasia_a_toolkit_for_evaluating_the_effects_of_biological_interventions_on_sbml_model_behaviour_plos_computational_biology/</link><pubDate>Fri, 03 Feb 2017 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/aspasia_a_toolkit_for_evaluating_the_effects_of_biological_interventions_on_sbml_model_behaviour_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2017-02-03&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: None&lt;/p>
&lt;p>authors: Stephanie Evans, Lourdes Cucurull-Sanchez, Christopher Larminie, Mark C. Coles, Marika C. Kullberg, Jon Timmis, Kieran Alden&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1005351&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item></channel></rss>