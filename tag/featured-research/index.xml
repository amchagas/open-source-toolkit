<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Featured research | Open Source Toolkit</title><link>https://amchagas.github.io/open-source-toolkit/tag/featured-research/</link><atom:link href="https://amchagas.github.io/open-source-toolkit/tag/featured-research/index.xml" rel="self" type="application/rss+xml"/><description>Featured research</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>CC BY SA 4.0</copyright><lastBuildDate>Tue, 18 Aug 2020 00:00:00 +0000</lastBuildDate><image><url>https://amchagas.github.io/open-source-toolkit/media/openneuroscience_logo_dark.svg</url><title>Featured research</title><link>https://amchagas.github.io/open-source-toolkit/tag/featured-research/</link></image><item><title>AlbaTraDIS: Comparative analysis of large datasets from parallel transposon mutagenesis experiments</title><link>https://amchagas.github.io/open-source-toolkit/post/albatradis_comparative_analysis_of_large_datasets_from_parallel_transposon_mutagenesis_experiments_plos_computational_biology/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/albatradis_comparative_analysis_of_large_datasets_from_parallel_transposon_mutagenesis_experiments_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-08-18&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: In this software paper, Page et al develop ‘AlbaTraDIS’; a software application for rapid large-scale comparative analysis of TraDIS experiments that predicts the impact of transposon insertions on nearby genes. AlbaTraDIS can identify genes which are up or down regulated, or inactivated, between multiple conditions, producing a filtered list of genes for further experimental validation as well as several accompanying data visualisations. The authors demonstrate the utility of their new approach by applying it to identify genes used by Escherichia coli to survive in a wide range of different concentrations of the biocide Triclosan.&lt;/p>
&lt;p>authors: Andrew J. Page, Muhammad Yasir, A. Keith Turner, Thanh Le Viet, George M. Savva, Mark A. Webber, Ian G. Charles, Sarah Bastkowski&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007980&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>OSS-DBS: Open-source simulation platform for deep brain stimulation with a comprehensive automated modeling</title><link>https://amchagas.github.io/open-source-toolkit/post/ossdbs_opensource_simulation_platform_for_deep_brain_stimulation_with_a_comprehensive_automated_modeling_plos_computational_biology/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/ossdbs_opensource_simulation_platform_for_deep_brain_stimulation_with_a_comprehensive_automated_modeling_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-08-18&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: In this study, Butenko et al propose a new open-source simulation platform that comprises computer-aided design and computer-aided engineering tools for highly automated evaluation of electric field distribution and neural activation during Deep Brain Stimulation (DBS). They show how a Volume Conductor Model (VCM) is constructed and examined using Python-controlled algorithms for generation, discretization and adaptive mesh refinement of the computational domain, as well as for incorporation of heterogeneous and anisotropic properties of the tissue and allocation of neuron models.&lt;/p>
&lt;p>authors: Konstantin Butenko, Christian Bahls, Max Schröder, Rüdiger Köhling, Ursula van Rienen&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1008023&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>RefShannon: A genome-guided transcriptome assembler using sparse flow decomposition</title><link>https://amchagas.github.io/open-source-toolkit/post/refshannon_a_genomeguided_transcriptome_assembler_using_sparse_flow_decomposition_plos_one/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/refshannon_a_genomeguided_transcriptome_assembler_using_sparse_flow_decomposition_plos_one/</guid><description>&lt;p>Publishing date: 2020-08-18&lt;/p>
&lt;p>Published on: PLOS ONE&lt;/p>
&lt;p>summary: High throughput RNA-Seq has become a staple in modern molecular biology, with applications not only in quantifying gene expression but also in isoform-level analysis of the RNA transcripts. To enable such an isoform-level analysis, a transcriptome assembly algorithm is utilized to stitch together the observed short reads into the corresponding transcripts. This task is complicated due to the complexity of alternative splicing - a mechanism by which the same gene may generate multiple distinct RNA transcripts. Mao et al develop a novel genome-guided transcriptome assembler, RefShannon, that exploits the varying abundances of the different transcripts, in enabling an accurate reconstruction of the transcripts.&lt;/p>
&lt;p>authors: Shunfu Mao, Lior Pachter, David Tse, Sreeram Kannan&lt;/p>
&lt;p>link to paper: 10.1371/journal.pone.0232946&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title>The genome polishing tool POLCA makes fast and accurate corrections in genome assemblies</title><link>https://amchagas.github.io/open-source-toolkit/post/the_genome_polishing_tool_polca_makes_fast_and_accurate_corrections_in_genome_assemblies_plos_computational_biology/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/the_genome_polishing_tool_polca_makes_fast_and_accurate_corrections_in_genome_assemblies_plos_computational_biology/</guid><description>&lt;p>Publishing date: 2020-08-18&lt;/p>
&lt;p>Published on: PLOS Computational Biology&lt;/p>
&lt;p>summary: In this report, Zimin and Salzberg present the assembly polishing tool POLCA (POLishing by Calling Alternatives) and compare its performance with two other popular polishing programs, Pilon and Racon. They show that on simulated data POLCA is more accurate than Pilon, and comparable in accuracy to Racon. On real data, all three programs show similar performance, but POLCA is consistently much faster than either of the other polishing programs.&lt;/p>
&lt;p>authors: Aleksey V. Zimin, Steven L. Salzberg&lt;/p>
&lt;p>link to paper: 10.1371/journal.pcbi.1007981&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item><item><title> Development of a low-cost, user-customizable, high-speed camera</title><link>https://amchagas.github.io/open-source-toolkit/post/_development_of_a_lowcost_usercustomizable_highspeed_camera_plos_one/</link><pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate><guid>https://amchagas.github.io/open-source-toolkit/post/_development_of_a_lowcost_usercustomizable_highspeed_camera_plos_one/</guid><description>&lt;p>Publishing date: 2020-06-15&lt;/p>
&lt;p>Published on: PLOS ONE&lt;/p>
&lt;p>summary: Channel Editor Summary: The paper describes a high speed camera system, capable of reaching frame rates of ~2300 frames per second in its max speed setting. Costing around 700 dollars, this system is quite affordable when compared to current commercial solutions and has the advantage of being standalone, which means it can work without a computer and it can potentially be powered by batteries, opening it up its use for a diverse range of fields. The system employs a black and white sensor, which makes it a good candidate for applications that require fluorescence detection. With good explanations on the rationale behind design decisions and a supporting repository, this paper is a good example on the amazing possibilities of Open Source Hardware for research.&lt;/p>
&lt;p>authors: Yamn Chalich, Avijit Mallick, Bhagwati Gupta, M. Jamal Deen&lt;/p>
&lt;p>link to paper: 10.1371/journal.pone.0232788&lt;/p>
&lt;p>Icons made by &lt;a href="https://www.flaticon.com/free-icon/bookshelves_3576884" title="catkuro">catkuro&lt;/a> from &lt;a href="https://www.flaticon.com/" title="Flaticon"> &lt;a href="http://www.flaticon.com">www.flaticon.com&lt;/a>&lt;/a>&lt;/p></description></item></channel></rss>